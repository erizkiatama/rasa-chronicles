name: Deploy

on:
  push:
    branches: [ main ]

jobs:
  Deploy:
    name: Deploy to EC2
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - name: Build & Deploy
        env:
            PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
            HOSTNAME: ${{secrets.SSH_HOST}}
            USER_NAME: ${{secrets.SSH_USERNAME}}
            DATABASE_NAME: ${{secrets.DATABASE_NAME}}
            DATABASE_HOST: ${{secrets.DATABASE_HOST}}
            DATABASE_PORT: ${{secrets.DATABASE_PORT}}
            DATABASE_USER: ${{secrets.DATABASE_USER}}
            DATABASE_PASSWORD: ${{secrets.DATABASE_PASSWORD}}
            ALLOWED_HOST: ${{secrets.ALLOWED_HOST}}
            APP_ENV: ${{secrets.APP_ENV}}

        run: |
          echo "$PRIVATE_KEY" > private_key && chmod 600 private_key
          echo "export DATABASE_NAME=$DATABASE_NAME DATABASE_HOST=$DATABASE_HOST DATABASE_PORT=$DATABASE_PORT DATABASE_USER=$DATABASE_USER DATABASE_PASSWORD=$DATABASE_PASSWORD ALLOWED_HOST=$ALLOWED_HOST APP_ENV=$APP_ENV" > env.txt
          scp -o StrictHostKeyChecking=no -i private_key env.txt ${USER_NAME}@${HOSTNAME}:~/env.txt
          ssh -o StrictHostKeyChecking=no -i private_key ${USER_NAME}@${HOSTNAME} '

              # Now we have got the access of EC2 and we will start the deploy .
              echo "Starting deployment" &&
              cd rasa-chronicles &&
              source ~/env.txt &&
              docker compose rm -sf app &&
              docker compose up -d --build --force-recreate app &&
              rm ~/env.txt &&
              echo "Deployment complete"
              '
